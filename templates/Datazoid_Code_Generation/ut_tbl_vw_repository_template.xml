<?xml version="1.0" encoding="utf-8"?>

<!--
	Copyright Â©2020-2021 WellEngineered.us, all rights reserved.
	Distributed under the MIT license: http://www.opensource.org/licenses/mit-license.php
-->
<Template xmlns="http://www.textmetal.com/api/v6.0.0">

	<OutputScope name="${ModuleName}.UnitTests\ThisAppRepositoryTests.tv.g.cs">
		<Include name="include_gen_cprt_message.cs.txt" />
<![CDATA[

using System;
using System.Xml;

using NUnit.Framework;
]]>
		<If>
			<If.Condition>
				<UnaryExpression operator="IsDef">
					<UnaryExpression.TheExpression>
						<Aspect name="ClrUsingNamespaces" />
					</UnaryExpression.TheExpression>
				</UnaryExpression>
			</If.Condition>
			<If.True>
				<ForEach in="ClrUsingNamespaces" var-ct="_LoopCount" var-ix="_LoopIndex" var-item="_LoopItem">
					<ForEach.Body>
						<![CDATA[using ${_LoopItem};
]]>
					</ForEach.Body>
				</ForEach>
			</If.True>
		</If>
		<If>
			<If.Condition>
				<BinaryExpression operator="Or">
					<BinaryExpression.LeftExpression>
						<BinaryExpression operator="Eq">
							<BinaryExpression.LeftExpression>
								<Facet name="HasTables" />
							</BinaryExpression.LeftExpression>
							<BinaryExpression.RightExpression>
								<Value type="System.Boolean" data="True" />
							</BinaryExpression.RightExpression>
						</BinaryExpression>
					</BinaryExpression.LeftExpression>
					<BinaryExpression.RightExpression>
						<BinaryExpression operator="Eq">
							<BinaryExpression.LeftExpression>
								<Facet name="HasViews" />
							</BinaryExpression.LeftExpression>
							<BinaryExpression.RightExpression>
								<Value type="System.Boolean" data="True" />
							</BinaryExpression.RightExpression>
						</BinaryExpression>
					</BinaryExpression.RightExpression>
				</BinaryExpression>
			</If.Condition>
			<If.True>
				<![CDATA[
]]>
			</If.True>
		</If>

		<If>
			<If.Condition>
				<BinaryExpression operator="Eq">
					<BinaryExpression.LeftExpression>
						<Value type="System.Boolean" data="True" />
					</BinaryExpression.LeftExpression>
					<BinaryExpression.RightExpression>
						<Facet name="HasTables" />
					</BinaryExpression.RightExpression>
				</BinaryExpression>
			</If.Condition>
			<If.True>
				<![CDATA[using ${ClrNamespace}.Tables;
]]>
			</If.True>
		</If>
		<If>
			<If.Condition>
				<BinaryExpression operator="Eq">
					<BinaryExpression.LeftExpression>
						<Value type="System.Boolean" data="True" />
					</BinaryExpression.LeftExpression>
					<BinaryExpression.RightExpression>
						<Facet name="HasViews" />
					</BinaryExpression.RightExpression>
				</BinaryExpression>
			</If.Condition>
			<If.True>
				<![CDATA[using ${ClrNamespace}.Views;
]]>
			</If.True>
		</If>
		<![CDATA[
namespace ${ClrNamespace}.UnitTests
{
	[TestFixture]
	public partial class ThisAppRepositoryTests
	{
		#region Methods/Operators

]]>

		<ForEach in="Schemas" var-ct="_LoopCount" var-ix="_LoopIndex">
			<ForEach.Filter></ForEach.Filter>
			<ForEach.Body>

				<ForEach in="Tables" var-ct="_LoopCount" var-ix="_LoopIndex">
					<ForEach.Filter></ForEach.Filter>
					<ForEach.Body>
						<![CDATA[		[Ignore]
		[Test]
		public void ShouldSave${TableNameSingularPascalCase}Test()
		{
			throw new NotImplementedException();
		}

		[Ignore]
		[Test]
		public void ShouldLoad${TableNameSingularPascalCase}Test()
		{
			throw new NotImplementedException();
		}

		[Ignore]
		[Test]
		public void ShouldGetAll${TableNamePluralPascalCase}Test()
		{
			throw new NotImplementedException();
		}
]]>
						<If>
							<If.Condition>
								<BinaryExpression operator="Ne">
									<BinaryExpression.LeftExpression>
										<Facet name="_LoopCount" />
									</BinaryExpression.LeftExpression>
									<BinaryExpression.RightExpression>
										<Facet name="_LoopIndex" />
									</BinaryExpression.RightExpression>
								</BinaryExpression>
							</If.Condition>
							<If.True>
								<![CDATA[
]]>
							</If.True>
						</If>
					</ForEach.Body>
				</ForEach>

			</ForEach.Body>
		</ForEach>

		<![CDATA[
		#endregion
	}
}
]]>
	</OutputScope>

</Template>
